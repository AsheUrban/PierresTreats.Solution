@{
  Layout = "_Layout";
}

@model PierresTreats.Models.Treat;

<div class="container">
  <h2 class="text-center my-4">Treat Details</h2>
  <hr />
  <div class="d-flex flex-column align-items-center">
    <h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>

    @if(@Model.JoinEntities.Count == 0)
        {
          <p>This treat does not have any flavors</p>
        }
        else
        {
          <h4>Flavors the treat belongs to:</h4>
          <ul>
            <hr />
            @foreach(var join in Model.JoinEntities)
            {
              <div class="d-flex flex-row justify-content-end">
                <li>@join.Flavor.Description</li>
                @using (Html.BeginForm("DeleteFlavor", "Treats"))
                {
                  @Html.Hidden("joinId", @join.TreatFlavorId)
                  <input type="submit" value="Delete" class="btn btn-danger mx-4"/>
                }
              </div>
            <hr />
            }
          </ul>
        }
      </div>
    <hr />
    </div>
  <div class="d-flex flex-row justify-content-center">
    <p class="fancyBtn mx-3">@Html.ActionLink("Back to categories", "Index")</p>
    <p class="fancyBtn mx-3">@Html.ActionLink("Edit Treat", "Edit", new { id = Model.TreatId })</p>
    <p class="fancyBtn mx-2">@Html.ActionLink("Add a Flavor", "AddFlavor", new { id = Model.TreatId })</p>
    <p class="fancyBtn mx-3">@Html.ActionLink("Delete Treat", "Delete", new { id = Model.TreatId })</p>
  </div>
</div>
